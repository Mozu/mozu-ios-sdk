
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "MOZUPackageMeasurements.h"



@protocol MOZUCommerceBundledProduct
@end


/**
	Properties of a component product in a product bundle. A product bundle can represent either a collection of multiple products sold as a single entity, or a collection of the same product sold as a package. For example, a 10-pack of socks or multiple parts and devices in a technology bundle for a computer.
*/
@interface MOZUCommerceBundledProduct : JSONModel<MOZUCommerceBundledProduct>

/**
Allocation ID associated with this product on this order.
*/
@property(nonatomic) NSDate * allocationExpiration;

/**
Allocation ID associated with this product on this order.
*/
@property(nonatomic) NSNumber * allocationId;

/**
The credit value of the product or bundled product. When the `goodsType `is `DigitalCredit`, this value is populated to indicate the value of the credit. This is used to create store credit in the fulfillment of gift cards.
*/
@property(nonatomic) NSNumber * creditValue;

/**
The localized description in text for the object, displayed per the locale code. For example, descriptions are used for product descriptions, attributes, and pre-authorization transaction types.
*/
@property(nonatomic) NSString * theDescription;

/**
Fulfillment status of the product.
*/
@property(nonatomic) NSString * fulfillmentStatus;

/**
The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
*/
@property(nonatomic) NSString * goodsType;

/**
Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
*/
@property(nonatomic) BOOL isPackagedStandAlone;

/**
The display name of the source product property. For a product field it will be the display name of the field. For a product attribute it will be the Attribute Name.
*/
@property(nonatomic) NSString * name;

/**
The fully qualified name of the attribute, which is a user defined attribute identifier.
*/
@property(nonatomic) NSString * optionAttributeFQN;

/**
The value of the option attribute. These values are associated and used by product bundles and options.
*/
@property(nonatomic) NSObject * optionValue;

/**
Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
*/
@property(nonatomic) NSString * productCode;

/**
Unique identifier of the product reservation associated with the component product in a product bundle or item in a cart/order. System-supplied and read only.
*/
@property(nonatomic) NSNumber * productReservationId;

/**
The specified quantity of objects and items. This property is used for numerous object types including products, options, components within a product bundle, cart and order items, returned items, shipping line items, items in a digital product. and items associated with types and reservations.
*/
@property(nonatomic) NSInteger quantity;

/**
Dimensions of the packaged product.
*/
@property(nonatomic) MOZUPackageMeasurements *measurements;

@end


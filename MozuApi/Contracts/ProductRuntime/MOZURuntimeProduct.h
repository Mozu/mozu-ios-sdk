
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "MOZURuntimeDiscount.h"
#import "MOZURuntimeBundledProduct.h"
#import "MOZURuntimeCategory.h"
#import "MOZUProductContent.h"
#import "MOZURuntimeProductInventoryInfo.h"
#import "MOZURuntimePackageMeasurements.h"
#import "MOZURuntimeProductOption.h"
#import "MOZURuntimeProductPrice.h"
#import "MOZUProductPriceRange.h"
#import "MOZURuntimeProductPricingBehaviorInfo.h"
#import "MOZURuntimeProductProperty.h"
#import "MOZUProductPurchasableState.h"



@protocol MOZURuntimeProduct
@end


/**
	Properties of the product that appears on a designated storefront.
*/
@interface MOZURuntimeProduct : JSONModel<MOZURuntimeProduct>

/**
Date and time when the entity was created, represented in UTC Date/Time.
*/
@property(nonatomic) NSDate * createDate;

@property(nonatomic) NSArray *fulfillmentTypesSupported;

/**
If true, the product is marked as available for sale. Setting a product to IsActive = false will prevent it from being shown on the customer facing storefront.
*/
@property(nonatomic) NSNumber * isActive;

@property(nonatomic) NSNumber * isPackagedStandAlone;

/**
If true, the product can be purchased or fulfilled at regular intervals such as a monthly billing cycle or a digital or physical subscription.
*/
@property(nonatomic) BOOL isRecurring;

/**
If true, the entity is subject to tax based on the relevant tax rate.
*/
@property(nonatomic) BOOL isTaxable;

@property(nonatomic) NSArray *mfgPartNumber;

/**
Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
*/
@property(nonatomic) NSString * productCode;

/**
Integer that represents the sequential order of the product.
*/
@property(nonatomic) NSNumber * productSequence;

/**
A product type is like a product template that can be reused.
*/
@property(nonatomic) NSString * productType;

@property(nonatomic) NSString * productUsage;

/**
The publishing state of the product definition in the master catalog, which is "New", "Draft", or "Live".
*/
@property(nonatomic) NSString * publishState;

/**
The universal product code (UPC code) of the product.
*/
@property(nonatomic) NSArray *upc;

/**
Product code that represents the product variation selected based on the option values the shopper entered.
*/
@property(nonatomic) NSString * variationProductCode;

/**
List of shipping discounts that can be applied to the product.
*/
@property(nonatomic) NSArray<MOZURuntimeDiscount> *availableShippingDiscounts;

@property(nonatomic) NSArray<MOZURuntimeBundledProduct> *bundledProducts;

/**
List of categories associated with the product.
*/
@property(nonatomic) NSArray<MOZURuntimeCategory> *categories;

/**
Complex type that contains content for a language specified by LocaleCode.
*/
@property(nonatomic) MOZUProductContent *content;

/**
Array of active inventory level information associated with the product.
*/
@property(nonatomic) MOZURuntimeProductInventoryInfo *inventoryInfo;

/**
Dimensions of the packaged product.
*/
@property(nonatomic) MOZURuntimePackageMeasurements *measurements;

/**
The list of options set up in product admin.
*/
@property(nonatomic) NSArray<MOZURuntimeProductOption> *options;

/**
Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
*/
@property(nonatomic) MOZURuntimeProductPrice *price;

/**
For products with options that vary the cost of the product, the range between lowest and highest possible price of the product based on the current selection of options.
*/
@property(nonatomic) MOZUProductPriceRange *priceRange;

@property(nonatomic) MOZURuntimeProductPricingBehaviorInfo *pricingBehavior;

/**
The list of product properties set up in product admin.
*/
@property(nonatomic) NSArray<MOZURuntimeProductProperty> *properties;

/**
The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
*/
@property(nonatomic) MOZUProductPurchasableState *purchasableState;

@end


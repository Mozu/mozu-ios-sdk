
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "MOZUBundledProductSummary.h"
#import "MOZURuntimeCategory.h"
#import "MOZUProductImage.h"
#import "MOZURuntimeProductInventoryInfo.h"
#import "MOZURuntimePackageMeasurements.h"
#import "MOZURuntimeProductPrice.h"
#import "MOZURuntimeProductPricingBehaviorInfo.h"
#import "MOZURuntimeProductProperty.h"
#import "MOZUProductPurchasableState.h"



@protocol MOZUProductValidationSummary
@end


/**
	Summary list of the product validation in a storefront, including options selected by the shopper.
*/
@interface MOZUProductValidationSummary : JSONModel<MOZUProductValidationSummary>

/**
List of supported types of fulfillment  for the product or variation. The types include direct ship, in-store pickup, or both. 
*/
@property(nonatomic) NSArray *fulfillmentTypesSupported;

/**
The type of goods in a bundled product. A bundled product is composed of products associated to sell together. Possible values include “Physical” and “DigitalCredit”. This comes from the `productType `of the product. Products are defaulted to a Physical `goodsType`. Gift cards have a `goodsType `of DigitalCredit.
*/
@property(nonatomic) NSString * goodsType;

/**
Indicates if the product must be shipped alone in a container. This is used for products and products within a bundle. If true, this product cannot be shipped in a package with other items and must ship in a package by itself.
*/
@property(nonatomic) NSNumber * isPackagedStandAlone;

/**
Indicates if the item is subject to taxation, used by products, options, extras, cart and order items, line items, and wish lists. If true, the entity is subject to tax based on the relevant tax rate and rules.
*/
@property(nonatomic) BOOL isTaxable;

/**
The manufacturer's part number for the product.
*/
@property(nonatomic) NSString * mfgPartNumber;

/**
Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
*/
@property(nonatomic) NSString * productCode;

/**
The name of the product that represents a line item in a taxable order or product bundle.
*/
@property(nonatomic) NSString * productName;

/**
Brief text description of the product or component in a product bundle, typically used when the product is displayed in a list or in search results.
*/
@property(nonatomic) NSString * productShortDescription;

/**
The product type template associated with the product on the storefront.
*/
@property(nonatomic) NSString * productType;

/**
The usage type that applies to this product, which is Standard (a single product without configurable options), Configurable (a product that includes configurable option attributes), Bundle (a collection of products sold as a single entity), or Component (an invididual product that represents a component in a bundle).
*/
@property(nonatomic) NSString * productUsage;

/**
The universal product code (UPC) is the barcode defined for the product. The UPC is unique across all sales channels. 
*/
@property(nonatomic) NSString * upc;

/**
Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
*/
@property(nonatomic) NSString * variationProductCode;

/**
Properties of a collection of component products that make up a single product bundle with its own product code. Tenants can define product bundles for any product type that supports the Bundle product usage.
*/
@property(nonatomic) NSArray<MOZUBundledProductSummary> *bundledProducts;

/**
The list of all categories associated with the product. These categories contain products, can have discounts associated, and define the grouping of products to display on the storefront.
*/
@property(nonatomic) NSArray<MOZURuntimeCategory> *categories;

/**
The image configured for the product on the storefront.
*/
@property(nonatomic) MOZUProductImage *image;

/**
Properties and data of inventory information for configured and bundled products. If product stock is managed, the data specifies out of stock behavior.
*/
@property(nonatomic) MOZURuntimeProductInventoryInfo *inventoryInfo;

/**
Dimensions of the packaged product.
*/
@property(nonatomic) MOZURuntimePackageMeasurements *measurements;

/**
Price that the merchant intends to sell the product which is not necessarily the list price. This is the price the merchant intends to sell the product if no sale price is present.
*/
@property(nonatomic) MOZURuntimeProductPrice *price;

/**
Properties that describe the behavior the system uses when determining the price of products.
*/
@property(nonatomic) MOZURuntimeProductPricingBehaviorInfo *pricingBehavior;

/**
Collection of property attributes defined for the object. Properties are associated to all objects within Mozu, including documents, products, and product types.
*/
@property(nonatomic) NSArray<MOZURuntimeProductProperty> *properties;

/**
The current state of the configured product determines whether or not the product is eligible for purchase. Products with options are only purchasable if the shopper has selected all required options. If the product is not ready for purchase, a message lists missing options that are required.
*/
@property(nonatomic) MOZUProductPurchasableState *purchasableState;

@end


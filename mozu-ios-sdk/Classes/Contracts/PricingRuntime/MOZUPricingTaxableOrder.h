
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import <Foundation/Foundation.h>
#import "JSONModel.h"
#import "MOZUTaxableLineItem.h"
#import "MOZUPricingTaxContext.h"



@protocol MOZUPricingTaxableOrder
@end


/**
	Properties of an order to calculate tax against. When a tax capability is enabled for a tenant, Mozu sends the `TaxableOrder `properties to the capability as read-only, system-supplied information.
*/
@interface MOZUPricingTaxableOrder : JSONModel<MOZUPricingTaxableOrder>

/**
The combined price for all handling costs calculated together for shipped orders, not for digital or in-store pickup. This includes all handling costs per the product line items and options, excluding taxes and discounts. 
*/
@property(nonatomic) NSNumber * handlingFee;

/**
The date and time the order was submitted for purchase. 
*/
@property(nonatomic) NSDate * orderDate;

/**
The unique identifier of the original order, used to track order changes for tax purposes.
*/
@property(nonatomic) NSString * originalDocumentCode;

/**
The date and time the original order was placed. This date is set when the order is submitted with payment. 
*/
@property(nonatomic) NSDate * originalOrderDate;

/**
The calculated monetary amount of shipping for a line items within and an entire order.
*/
@property(nonatomic) NSNumber * shippingAmount;

/**
The type of request for which to tax this entity, which is Order or Return.
*/
@property(nonatomic) NSString * taxRequestType;

/**
3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
*/
@property(nonatomic) NSString * currencyCode;

/**
List of line items associated with the order.
*/
@property(nonatomic) NSArray<MOZUTaxableLineItem> *lineItems;

/**
The tax properties associated with the order.
*/
@property(nonatomic) MOZUPricingTaxContext *taxContext;

@end


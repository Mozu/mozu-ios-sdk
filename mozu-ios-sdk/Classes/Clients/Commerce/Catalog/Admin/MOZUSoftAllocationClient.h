
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import <Foundation/Foundation.h>
#import "MOZUClient.h"
#import "MOZUSoftAllocation.h"
#import "MOZUProductReservation.h"
#import "MOZUSoftAllocationCollection.h"
#import "MOZUSoftAllocationRenew.h"


@interface MOZUSoftAllocationClient : NSObject

//
#pragma mark -
#pragma mark Get Operations
#pragma mark -
//

/**
Retrieves a list of sof allocations according to any specified filter criteria and sort options.
@param filter A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.
@param pageSize The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
@param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.
@param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=50`.
*/

+ (MOZUClient *)clientForGetSoftAllocationsOperationWithStartIndex:(NSNumber *)startIndex pageSize:(NSNumber *)pageSize sortBy:(NSString *)sortBy filter:(NSString *)filter responseFields:(NSString *)responseFields;

/**
Retrieves the details of a soft allocation.
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
@param softAllocationId The unique identifier of the soft allocation.
*/

+ (MOZUClient *)clientForGetSoftAllocationOperationWithSoftAllocationId:(NSInteger)softAllocationId responseFields:(NSString *)responseFields;


//
#pragma mark -
#pragma mark Post Operations
#pragma mark -
//

/**
Creates a new product reservation for a product. This places a hold on the product inventory for the quantity specified during the ordering process.
@param body Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE 
*/

+ (MOZUClient *)clientForAddSoftAllocationsOperationWithBody:(NSArray<MOZUSoftAllocation> *)body;

/**
Converts a set of existing softAllocations into productReservations
@param body Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE 
*/

+ (MOZUClient *)clientForConvertToProductReservationOperationWithBody:(NSArray<MOZUSoftAllocation> *)body;

/**
Updates a set of softAllocations expiration time in a non trassactional batch
@param body Mozu.ProductAdmin.Contracts.SoftAllocationRenew ApiType DOCUMENT_HERE 
*/

+ (MOZUClient *)clientForRenewSoftAllocationsOperationWithBody:(MOZUSoftAllocationRenew *)body;


//
#pragma mark -
#pragma mark Put Operations
#pragma mark -
//

/**
Updates a soft allocationt. This updates a hold on the product inventory for the quantity specified during the ordering process.
@param body Mozu.ProductAdmin.Contracts.SoftAllocation ApiType DOCUMENT_HERE 
*/

+ (MOZUClient *)clientForUpdateSoftAllocationsOperationWithBody:(NSArray<MOZUSoftAllocation> *)body;


//
#pragma mark -
#pragma mark Delete Operations
#pragma mark -
//

/**
Deletes a soft allocation. You might delete a allocation when an order or cart is not processed to return the product quantity back to inventory.
@param softAllocationId The unique identifier of the soft allocation.
*/

+ (MOZUClient *)clientForDeleteSoftAllocationOperationWithSoftAllocationId:(NSInteger)softAllocationId;



@end
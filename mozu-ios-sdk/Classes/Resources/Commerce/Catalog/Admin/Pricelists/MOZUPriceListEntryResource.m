
/*
* <auto-generated>
*     This code was generated by a tool.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

#import "MOZUPriceListEntryClient.h"
#import "MOZUPriceListEntryResource.h"


@interface MOZUPriceListEntryResource()
@property(readwrite, nonatomic) MOZUAPIContext * apiContext;
@end

@implementation MOZUPriceListEntryResource

-(id)initWithAPIContext:(MOZUAPIContext *)apiContext {
	if (self = [super init]) {
		self.apiContext = apiContext;
		return self;
	}
	else {
		return nil;
	}
}


-(id)cloneWithAPIContextModification:(MOZUAPIContextModificationBlock)apiContextModification {
	MOZUAPIContext* cloned = [self.apiContext cloneWith:apiContextModification];
	return [self initWithAPIContext:cloned];
}

//
#pragma mark -
#pragma mark Get Operations
#pragma mark -
//

/**
pricelists-entries Get GetPriceListEntry description DOCUMENT_HERE 
@param currencyCode The three character ISO currency code, such as USD for US Dollars.
@param priceListCode 
@param productCode The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
@param startDate 
*/

- (void)priceListEntryWithPriceListCode:(NSString *)priceListCode productCode:(NSString *)productCode currencyCode:(NSString *)currencyCode startDate:(NSDate *)startDate responseFields:(NSString *)responseFields completionHandler:(void(^)(MOZUPriceListEntry *result, MOZUAPIError *error, NSHTTPURLResponse *response))handler
 {
	MOZUClient *client = [MOZUPriceListEntryClient clientForGetPriceListEntryOperationWithPriceListCode:priceListCode productCode:productCode currencyCode:currencyCode startDate:startDate responseFields:responseFields];
	client.context = self.apiContext;
	[client executeWithCompletionHandler:^(id result, NSHTTPURLResponse *response, MOZUAPIError *error) {
		if (handler != nil) {
			handler(result, error, response);
		}
	}];
}

/**
pricelists-entries Get GetPriceListEntries description DOCUMENT_HERE 
@param filter A set of filter expressions representing the search parameters for a query: eq=equals, ne=not equals, gt=greater than, lt = less than or equals, gt = greater than or equals, lt = less than or equals, sw = starts with, or cont = contains. Optional.
@param pageSize The number of results to display on each page when creating paged results from a query. The amount is divided and displayed on the `pageCount `amount of pages. The default is 20 and maximum value is 200 per page.
@param priceListCode 
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
@param sortBy The element to sort the results by and the channel in which the results appear. Either ascending (a-z) or descending (z-a) channel. Optional.
@param startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a `pageSize `of 25, to get the 51st through the 75th items, use `startIndex=50`.
*/

- (void)priceListEntriesWithPriceListCode:(NSString *)priceListCode startIndex:(NSNumber *)startIndex pageSize:(NSNumber *)pageSize sortBy:(NSString *)sortBy filter:(NSString *)filter responseFields:(NSString *)responseFields completionHandler:(void(^)(MOZUPriceListEntryCollection *result, MOZUAPIError *error, NSHTTPURLResponse *response))handler
 {
	MOZUClient *client = [MOZUPriceListEntryClient clientForGetPriceListEntriesOperationWithPriceListCode:priceListCode startIndex:startIndex pageSize:pageSize sortBy:sortBy filter:filter responseFields:responseFields];
	client.context = self.apiContext;
	[client executeWithCompletionHandler:^(id result, NSHTTPURLResponse *response, MOZUAPIError *error) {
		if (handler != nil) {
			handler(result, error, response);
		}
	}];
}


//
#pragma mark -
#pragma mark Post Operations
#pragma mark -
//

/**
pricelists-entries Post AddPriceListEntry description DOCUMENT_HERE 
@param body Mozu.ProductAdmin.Contracts.PriceListEntry ApiType DOCUMENT_HERE 
@param priceListCode 
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
*/

- (void)addPriceListEntryWithBody:(MOZUPriceListEntry *)body priceListCode:(NSString *)priceListCode responseFields:(NSString *)responseFields completionHandler:(void(^)(MOZUPriceListEntry *result, MOZUAPIError *error, NSHTTPURLResponse *response))handler
 {
	MOZUClient *client = [MOZUPriceListEntryClient clientForAddPriceListEntryOperationWithBody:body priceListCode:priceListCode responseFields:responseFields];
	client.context = self.apiContext;
	[client executeWithCompletionHandler:^(id result, NSHTTPURLResponse *response, MOZUAPIError *error) {
		if (handler != nil) {
			handler(result, error, response);
		}
	}];
}


//
#pragma mark -
#pragma mark Put Operations
#pragma mark -
//

/**
pricelists-entries Put UpdatePriceListEntry description DOCUMENT_HERE 
@param body Mozu.ProductAdmin.Contracts.PriceListEntry ApiType DOCUMENT_HERE 
@param currencyCode The three character ISO currency code, such as USD for US Dollars.
@param priceListCode 
@param productCode The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.
@param responseFields Filtering syntax appended to an API call to increase or decrease the amount of data returned inside a JSON object. For example, ) returns only the  and  items inside the  array of the specified product.This paramter should only be used to retrieve data. Attempting to update data using this parmater may cause data loss.
@param startDate 
*/

- (void)updatePriceListEntryWithBody:(MOZUPriceListEntry *)body priceListCode:(NSString *)priceListCode productCode:(NSString *)productCode currencyCode:(NSString *)currencyCode startDate:(NSDate *)startDate responseFields:(NSString *)responseFields completionHandler:(void(^)(MOZUPriceListEntry *result, MOZUAPIError *error, NSHTTPURLResponse *response))handler
 {
	MOZUClient *client = [MOZUPriceListEntryClient clientForUpdatePriceListEntryOperationWithBody:body priceListCode:priceListCode productCode:productCode currencyCode:currencyCode startDate:startDate responseFields:responseFields];
	client.context = self.apiContext;
	[client executeWithCompletionHandler:^(id result, NSHTTPURLResponse *response, MOZUAPIError *error) {
		if (handler != nil) {
			handler(result, error, response);
		}
	}];
}


//
#pragma mark -
#pragma mark Delete Operations
#pragma mark -
//

/**
pricelists-entries Delete DeletePriceListEntry description DOCUMENT_HERE 
@param currencyCode The three character ISO currency code, such as USD for US Dollars.
@param priceListCode 
@param productCode The unique, user-defined product code of a product, used throughout Mozu to reference and associate to a product.
@param startDate 
*/

- (void)deletePriceListEntryWithPriceListCode:(NSString *)priceListCode productCode:(NSString *)productCode currencyCode:(NSString *)currencyCode startDate:(NSDate *)startDate completionHandler:(void(^)(MOZUAPIError *error, NSHTTPURLResponse *response))handler
 {
	MOZUClient *client = [MOZUPriceListEntryClient clientForDeletePriceListEntryOperationWithPriceListCode:priceListCode productCode:productCode currencyCode:currencyCode startDate:startDate];
	client.context = self.apiContext;
	[client executeWithCompletionHandler:^(id result, NSHTTPURLResponse *response, MOZUAPIError *error) {
		if (handler != nil) {
			handler(error, response);
		}
	}];
}



@end